services:
  python-app:
    build:
        context: dockers/python-app
        dockerfile: Dockerfile
    container_name: python-app
    #command: python /app/python.py
    ports:
      - "8000:8000"
    volumes:
      - ./scripts/app:/app
      - ./data/files:/files
    networks:
      - app-network

  kafka:
    image: wurstmeister/kafka:2.13-2.8.1
    container_name: kafka
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_HOST_NAME: kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    networks:
      - app-network

  kafdrop:
    image: obsidiandynamics/kafdrop:3.30.0
    container_name: kafdrop
    ports:
        - "9003:9000"
    environment:
        - KAFKA_BROKERCONNECT=kafka:9092
    depends_on:
        - kafka
    networks:
      - app-network

  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: zookeeper
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
    ports:
      - "2181:2181"
    networks:
      - app-network

  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "9000:9000"
      - "9002:9001"
    environment:
      MINIO_ACCESS_KEY: "minioadmin"
      MINIO_SECRET_KEY: "minioadmin"
    volumes:
      - minio-data:/data
      - ./dockers/minio/docker-entrypoint.sh:/docker-entrypoint.sh
    entrypoint: ["/docker-entrypoint.sh"]
    networks:
      - app-network

  mariadb:
    image: mariadb:latest
    container_name: mariadb
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: exampledb
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    ports:
      - "3306:3306"
    volumes:
      - mariadb-data:/var/lib/mysql
    networks:
      - app-network

  spark:
    image: ofrir119/developer_env:spark340_ssh
    container_name: spark
    ports:
      - "22022:22"
      - "8888:8888"
      - "4040:4040"
      - "4041:4041"
      - "4042:4042"
    networks:
      - app-network

volumes:
  minio-data:
  mariadb-data:

networks:
  app-network:
    driver: bridge

